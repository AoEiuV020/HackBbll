
name: debugger
env:
    TZ: Asia/Shanghai

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: init custom env
        run: |
          set -a
          BUILD_NAME="${GITHUB_REPOSITORY#*/}"
          if [[ ${GITHUB_REF} == refs/tags* ]]
          then
              CREATE_RELEASE="true"
              BUILD_VERSION=${GITHUB_REF#refs/tags/}
              RELEASE_BODY=$(./latest-changelog.sh $BUILD_VERSION |sed '1s/[，,]$//;1s/^\(.*\)$/### \1\n/')
              if [[ -z "$RELEASE_BODY" ]]
              then
                  RELEASE_BODY='### ${{ github.event.head_commit.message }}'
                  TG_CHANGELOG="$(echo "$RELEASE_BODY"|sed -n "s/### \(.*\)/\1/p" |sed -n '{;=;p}' | sed "N;s/\n/. /g")"
              else
                  TG_CHANGELOG=$(./latest-changelog.sh $BUILD_VERSION |sed -n '{;=;p}' | sed "N;s/\n/. /g")
              fi
          elif [[ ${GITHUB_REF} == refs/pull* ]]
          then
              CREATE_RELEASE="false"
              num=${GITHUB_REF#refs/pull/}
              num=${num%/merge}
              BUILD_VERSION=pr-${num}-"$(date +'%Y%m%d%H%M%S')"
          elif [[ ${GITHUB_REF} == refs/heads* ]]
          then
              CREATE_RELEASE="false"
              echo DEPLOY_WEB="true" >> .custom_env
              BUILD_VERSION="${GITHUB_REF#refs/heads/}-$(date +'%Y%m%d%H%M%S')"
              if [[ '${{ toJson(github.event.commits) }}' == 'null' ]]
              then
                RELEASE_BODY=$(git log -1 --pretty=format:"%s")
              else
                RELEASE_BODY=$(echo '${{ toJson(github.event.commits) }}' |jq -r 'map("### "+.message)|join("\n\n------\n")')
              fi
              TG_CHANGELOG="$(echo "$RELEASE_BODY"|sed -n "s/### \(.*\)/\1/p" |sed -n '{;=;p}' | sed "N;s/\n/. /g")"
              VERSION_PREFIX='内测版-'
          else
              CREATE_RELEASE="false"
              BUILD_VERSION="$(date +'%Y%m%d%H%M%S')"
          fi
          BUILD_NAME_WITH_VERSION="$BUILD_NAME-$BUILD_VERSION"
          echo BUILD_NAME="$BUILD_NAME" >> .custom_env
          echo BUILD_VERSION="$BUILD_VERSION" >> .custom_env
          echo BUILD_NAME_WITH_VERSION="$BUILD_NAME_WITH_VERSION" >> .custom_env
          echo CREATE_RELEASE="$CREATE_RELEASE" >> .custom_env
          if test -n "$RELEASE_BODY"
          then
              echo 'RELEASE_BODY<<EOF' >> .custom_env
              echo "$RELEASE_BODY" >> .custom_env
              echo 'EOF' >> .custom_env
              echo 'UPDATE_BODY<<EOF' >> .custom_env
              envsubst < template-update.md >> .custom_env
              echo >> .custom_env
              echo 'EOF' >> .custom_env
          fi
          if [[ "$CREATE_RELEASE" == "true" && -n "${{ secrets.XPOSED_UPLOAD_TOKEN }}" && -n "${{ secrets.XPOSED_UPLOAD_REPO }}" ]]
          then
              echo CREATE_XPOSED_RELEASE="true" >> .custom_env
          fi
          if [[ "$CREATE_RELEASE" == "true" && -n "${{ secrets.TELEGRAM_TO }}" && -n "${{ secrets.TELEGRAM_TOKEN }}" ]]
          then
              echo SEND_TELEGRAM="true" >> .custom_env
          fi
          cat .custom_env
          cat .custom_env >> $GITHUB_ENV
      - name: set up JDK 1.11
        uses: actions/setup-java@v1
        with:
          java-version: 1.11
      - name: Setup Debug Session
        env:   
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PUSH_TOKEN: ${{ secrets.PUSH_TOKEN }}
        uses: mxschmitt/action-tmate@v3
